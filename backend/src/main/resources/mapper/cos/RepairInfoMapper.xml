<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.mrbird.febs.cos.dao.RepairInfoMapper">

    <!-- 分页查询维修信息 -->
    <select id="repairInfoByPage" resultType="java.util.LinkedHashMap">
        SELECT
        ri.id,
        ri.code,
        ri.content,
        ri.images,
        ri.worker,
        ri.total_price,
        ri.pay_date,
        ri.repair_type,
        ri.repair_status AS repairStatus,
        ri.create_date AS createDate,
        ri.request_no,
        ri.repair_level,
        ri.repair_date,
        ri.user_id,
        ri.device_id,
        oi.name,
        oi.phone,
        hi.address,
        hi.number,
        hi.floor,
        wi.name AS workerName,
        wi.phone AS workerPhone,
        wi.image AS workerImage,
        ei.id as evaluateFlag,
        ci.id as complaintFlag,
        bi.name AS buildRooms
        FROM
        repair_info ri
        LEFT JOIN owner_info oi ON ( oi.id = ri.user_id )
        LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id )
        LEFT JOIN worker_info wi ON ( wi.id = ri.worker )
        LEFT JOIN evaluate_info ei ON ( ei.order_id = ri.id )
        LEFT JOIN complaint_info ci ON (ci.order_id = ri.id)
        LEFT JOIN building_info bi ON ( bi.id = hi.building_id )
        WHERE
        1 = 1
        <if test="repairInfo.buildRooms != null and repairInfo.buildRooms != ''">
            AND bi.name LIKE CONCAT('%',#{repairInfo.buildRooms},'%')
        </if>
        <if test="repairInfo.name != null and repairInfo.name != ''">
            AND oi.name LIKE CONCAT('%',#{repairInfo.name},'%')
        </if>
        <if test="repairInfo.staffName != null and repairInfo.staffName != ''">
            AND wi.name LIKE CONCAT('%',#{repairInfo.staffName},'%')
        </if>
        <if test="repairInfo.phone != null and repairInfo.phone != ''">
            AND oi.phone LIKE CONCAT('%',#{repairInfo.phone},'%')
        </if>
        <if test="repairInfo.repairStatus != null and repairInfo.repairStatus != ''">
            AND ri.repair_status = #{repairInfo.repairStatus}
        </if>
        <if test="repairInfo.repairType != null and repairInfo.repairType != ''">
            AND ri.repair_type = #{repairInfo.repairType}
        </if>
        <if test="repairInfo.repairLevel != null and repairInfo.repairLevel != ''">
            AND ri.repair_level = #{repairInfo.repairLevel}
        </if>
        <if test="repairInfo.userId != null and repairInfo.userId != ''">
            AND oi.user_id = #{repairInfo.userId}
        </if>
        <if test="repairInfo.staffId != null">
            AND wi.user_id = #{repairInfo.staffId}
        </if>
        ORDER BY ri.create_date
    </select>

    <!-- 分页查询房屋维修统计 -->
    <select id="selectHouseRepairPage" resultType="java.util.LinkedHashMap">
        select
        ri.id,
        ri.repair_type,
        count(ri.repair_type) as repairNum,
        ri.code,
        ri.content,
        ri.worker,
        oi.name,
        oi.phone,
        hi.address,
        hi.number,
        hi.floor
        from
        repair_info ri
        left join houses_info hi on
        ( hi.id = ri.houses_id )
        left join owner_info oi on
        ( oi.id = hi.owner_id )
        where
        1 = 1
        and ri.repair_type is not null
        <if test="repairInfo.name != null and repairInfo.name != ''">
            AND oi.name LIKE CONCAT('%',#{repairInfo.name},'%')
        </if>
        <if test="repairInfo.houseAddress != null and repairInfo.houseAddress != ''">
            AND hi.address LIKE CONCAT('%',#{repairInfo.houseAddress},'%')
        </if>
        group by
        ri.houses_id,
        ri.repair_type
        order by
        ri.create_date
    </select>

    <!-- 查看维修详情 -->
    <select id="repairInfoById" resultType="java.util.LinkedHashMap">
        SELECT
        ri.id,
        ri.code,
        ri.content,
        ri.images,
        ri.worker,
        ri.repair_status AS repairStatus,
        ri.create_date AS createDate,
        ri.total_price,
        ri.pay_date,
        oi.name,
        oi.phone,
        hi.address,
        hi.number,
        hi.floor,
        wi.name AS workerName,
        wi.phone AS workerPhone,
        wi.image AS workerImage
        FROM
        repair_info ri
        LEFT JOIN owner_info oi ON ( oi.id = ri.user_id )
        LEFT JOIN houses_info hi ON ( hi.id = ri.houses_id )
        LEFT JOIN worker_info wi ON ( wi.id = ri.worker )
        WHERE
        1 = 1
        AND ri.id = #{ repairId }
    </select>


    <!-- 本月收益 -->
    <select id="selectIncomeMonth" resultType="java.math.BigDecimal">
        SELECT
            IFNULL( COUNT( pr.id ), 0 )
        FROM
            complaint_info pr
        WHERE
                DATE_FORMAT( pr.create_date, '%Y%m' ) = DATE_FORMAT(
                    CURDATE(),
                    '%Y%m')
    </select>

    <!-- 本月工单 -->
    <select id="selectWorkOrderMonth" resultType="java.lang.Integer">
        SELECT
            IFNULL( count( 1 ), 0 )
        FROM
            repair_info oi
        WHERE
                DATE_FORMAT( oi.pay_date, '%Y%m' ) = DATE_FORMAT(
                    CURDATE(),
                    '%Y%m')
          AND oi.repair_status = 2
    </select>

    <!-- 本年收益 -->
    <select id="selectIncomeYear" resultType="java.math.BigDecimal">
        SELECT
            IFNULL( COUNT( pr.id ), 0 )
        FROM
            complaint_info pr
        WHERE
                DATE_FORMAT( pr.create_date, '%Y' ) = DATE_FORMAT(
                    CURDATE(),
                    '%Y')
    </select>

    <!-- 本年工单 -->
    <select id="selectWorkOrderYear" resultType="java.lang.Integer">
        SELECT
            IFNULL( count( 1 ), 0 )
        FROM
            repair_info oi
        WHERE
                DATE_FORMAT( oi.pay_date, '%Y' ) = DATE_FORMAT(
                    CURDATE(),
                    '%Y')
          AND oi.repair_status = 2
    </select>

    <!-- 获取总维修工单 -->
    <select id="selectAmountPrice" resultType="java.lang.Integer">
        SELECT
            IFNULL(COUNT(pr.id), 0)
        FROM
            repair_info pr
        WHERE pr.repair_status = 2
    </select>

    <!-- 查询十天内缴费统计 -->
    <select id="selectPaymentRecord" resultType="java.util.LinkedHashMap">
        SELECT
            DATE_FORMAT( spo.days, '%m-%d' ) AS days,
            IFNULL(COUNT(pr.id), 0) AS count
        FROM
            (
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION
                SELECT
                    DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo
                LEFT JOIN complaint_info pr ON (
                        DATE_FORMAT( pr.create_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )
                )
        GROUP BY
            days
        ORDER BY
            days ASC
    </select>

    <!-- 十天内工单记录 -->
    <select id="selectOrderRecord" resultType="java.util.LinkedHashMap">
        SELECT
            DATE_FORMAT( spo.days, '%m-%d' ) AS days,
            IFNULL(COUNT(oi.id), 0) AS count
        FROM
            (
            SELECT
            DATE_SUB( curdate(), INTERVAL + 0 DAY ) days UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 1 DAY ) UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 2 DAY ) UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 3 DAY ) UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 4 DAY ) UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 5 DAY ) UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 6 DAY ) UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 7 DAY ) UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 8 DAY ) UNION
            SELECT
            DATE_SUB( curdate(), INTERVAL + 9 DAY )) spo
            LEFT JOIN repair_info oi ON (
            DATE_FORMAT( oi.pay_date, '%Y-%m-%d' ) = DATE_FORMAT( spo.days, '%Y-%m-%d' )
            AND oi.repair_status = '2'
            )
        GROUP BY
            days
        ORDER BY
            days ASC
    </select>

    <!-- 房间类型销量比率统计 -->
    <select id="selectTypeRateByMonth" resultType="java.util.LinkedHashMap">
        select
        rt.id,
        rt.name,
        count(oi.id) as count
        from
        repair_info rt
        left join park_order_info oi on
        (rt.id = oi.space_id
        <if test="year != null and year != ''">
            AND DATE_FORMAT(oi.pay_date, '%Y') = #{year}
        </if>
        <if test="month != null and month != ''">
            AND DATE_FORMAT(oi.pay_date, '%c') = #{month}
        </if>
        AND oi.repair_status = 2
        )
        where
        1 = 1
        group by
        rt.id
    </select>

    <!-- 房间类型销售比率统计 -->
    <select id="selectTypePriceRateByMonth" resultType="java.util.LinkedHashMap">
        select
        rt.id,
        rt.name,
        IFNULL(SUM(oi.total_price), 0) AS count
        from
        repair_info rt
        left join park_order_info oi on
        (rt.id = oi.space_id
        <if test="year != null and year != ''">
            AND DATE_FORMAT(oi.pay_date, '%Y') = #{year}
        </if>
        <if test="month != null and month != ''">
            AND DATE_FORMAT(oi.pay_date, '%c') = #{month}
        </if>
        AND oi.repair_status = 2
        )
        where
        1 = 1
        group by
        rt.id
    </select>

    <!-- 按月统计收益统计 -->
    <select id="selectPriceByMonth" resultType="java.util.LinkedHashMap">
        select
        tempDay.date,
        IFNULL(SUM(oi.total_price), 0) AS price
        from
        (
        select
        date
        from
        (
        select
        DATE_FORMAT(DATE_SUB(last_day(#{checkDate}), interval xc-1 day), '%Y-%m-%d') as date
        from
        (
        select
        @xi := @xi + 1 as xc
        from
        (
        select
        1
        union
        select
        2
        union
        select
        3
        union
        select
        4
        union
        select
        5
        union
        select
        6) xc1,
        (
        select
        1
        union
        select
        2
        union
        select
        3
        union
        select
        4
        union
        select
        5
        union
        select
        6) xc2,
        (
        select
        @xi := 0) xc0
        ) xcxc) x0
        where
        x0.date >= (
        select
        date_add(#{checkDate}, interval-day(#{checkDate})+ 1 day))) as tempDay
        left join repair_info oi on
        (DATE_FORMAT( oi.pay_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')
        <if test="year != null and year != ''">
            AND DATE_FORMAT(oi.pay_date, '%Y') = #{year}
        </if>
        <if test="month != null and month != ''">
            AND DATE_FORMAT(oi.pay_date, '%c') = #{month}
        </if>
        AND oi.repair_status = 2
        )
        where
        1 = 1
        group by
        tempDay.date
    </select>

    <!-- 按月统计工单统计 -->
    <select id="selectOrderNumByMonth" resultType="java.util.LinkedHashMap">
        select
        tempDay.date,
        count(oi.id) as count
        from
        (
        select
        date
        from
        (
        select
        DATE_FORMAT(DATE_SUB(last_day(#{checkDate}), interval xc-1 day), '%Y-%m-%d') as date
        from
        (
        select
        @xi := @xi + 1 as xc
        from
        (
        select
        1
        union
        select
        2
        union
        select
        3
        union
        select
        4
        union
        select
        5
        union
        select
        6) xc1,
        (
        select
        1
        union
        select
        2
        union
        select
        3
        union
        select
        4
        union
        select
        5
        union
        select
        6) xc2,
        (
        select
        @xi := 0) xc0
        ) xcxc) x0
        where
        x0.date >= (
        select
        date_add(#{checkDate}, interval-day(#{checkDate})+ 1 day))) as tempDay
        left join repair_info oi on
        (DATE_FORMAT( oi.pay_date, '%Y-%m-%d' ) = DATE_FORMAT( tempDay.date, '%Y-%m-%d')
        <if test="year != null and year != ''">
            AND DATE_FORMAT(oi.pay_date, '%Y') = #{year}
        </if>
        <if test="month != null and month != ''">
            AND DATE_FORMAT(oi.pay_date, '%c') = #{month}
        </if>
        AND oi.repair_status = 2
        )
        where
        1 = 1
        group by
        tempDay.date
    </select>
</mapper>
